// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  email            String         @unique
  name             String?
  Conversations    Conversation[]
  profile          String?
  createdAt        DateTime       @default(now())
  incomingRequests Request[]      @relation("incomingRequests")
  outgoingRequests Request[]      @relation("outgoingRequests")
  friends          String[]       @default([]) @db.ObjectId
}

model Message {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  senderId       String        @db.ObjectId
  receiverId     String        @db.ObjectId
  content        String
  status         String        @default("unread")
  createdAt      DateTime      @default(now())
  Conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?       @db.ObjectId
}

model Conversation {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  conversationId String    @unique
  messages       Message[]
  createdAt      DateTime  @default(now())
  User           User?     @relation(fields: [userId], references: [id])
  userId         String?   @db.ObjectId
}

model Request {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId      String   @db.ObjectId
  receiverId    String   @db.ObjectId
  createdAt     DateTime @default(now())
  status        String   @default("pending")
  receivingUser User?    @relation("incomingRequests", fields: [receiverId], references: [id])
  sendingUser   User?    @relation("outgoingRequests", fields: [senderId], references: [id])
}
